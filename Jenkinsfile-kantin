pipeline {
    agent any

    environment {
		DOCKERHUB_CREDENTIALS=credentials('dockerHub')
	}

    options { buildDiscarder(logRotator(artifactDaysToKeepStr: '',
     artifactNumToKeepStr: '', daysToKeepStr: '3', numToKeepStr: '5'))
      disableConcurrentBuilds() }

    stages {
        stage('clean') {

           agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }

            steps {
                sh '''
            mvn clean
                '''
            }
        }
    
    
    
        stage('compile') {

            agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }
            steps {
                sh '''
            mvn compile
                '''
            }
        }




        stage('validate') {

            agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }
            steps {
               sh '''
             mvn validate
                '''
            }
        }
    
    
        stage('package') {


            agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }
            steps {
                sh '''
            mvn package    
            ls -l webapp/target
            pwd

                '''
            }
        }
    
    
    
    
        stage('test') {


            agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }
            steps {
                sh '''
            mvn test
                '''
            }
        }
    
    
        stage('verify') {

            agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }
            steps {
                sh '''
            mvn verify
                '''
            }
        }
    
    
        stage('install') {

            agent {
        docker { image 'maven:3.8.5-openjdk-8-slim' }
    }
            steps {
                sh '''
            mvn install
                '''
            }
        }
        
    
        stage('docker build') {
            
            
            steps {
                sh '''
            docker build -t devops:001:002 .
                '''
            }
        }
    
        stage('Tag image ') {
            steps {
               sh '''
              sudo docker tag devops:001  devopseasylearning2021/devops1:002 
                '''
            }
        }
    
     stage('Docker Login') {

			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}

           
            

     stage('Docker push ') {
            steps {
               sh '''
             docker push devopseasylearning2021/devops1:002 
                '''
            }
        }
    
    
    
    
    
    
    }















}
